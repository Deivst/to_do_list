# Sistema de Gesti√≥n de Tareas en C++

## üìã Descripci√≥n

El **Sistema de Gesti√≥n de Tareas en C++** es una aplicaci√≥n de consola que permite a los usuarios organizar y gestionar sus tareas diarias de manera eficiente. Es ideal para principiantes que desean practicar conceptos fundamentales de C++ como estructuras, vectores y manejo de archivos.

## üñ•Ô∏è Caracter√≠sticas

- **Agregar Tareas**: Introduce nuevas tareas con descripci√≥n, fecha l√≠mite y prioridad.
- **Listar Tareas**: Muestra todas las tareas almacenadas.
- **Marcar como Completadas**: Actualiza el estado de una tarea.
- **Eliminar Tareas**: Elimina tareas espec√≠ficas.
- **Guardar y Cargar**: Persiste los datos mediante archivos.

## üöÄ Instalaci√≥n
### üì¶ Requisitos

- **Compilador de C++**: GCC, Clang o similar.
- **IDE/Editor de C√≥digo**: Visual Studio Code, CLion, Code::Blocks, etc.
- **Sistema Operativo**: Compatible con Windows, macOS y Linux.

### üîß Pasos para Compilar y Ejecutar

1. **Instalar un Compilador de C++**

   - **Windows**:
     - **MinGW**:
       1. Descarga el instalador de MinGW desde [MinGW official website](http://www.mingw.org/).
       2. Instala MinGW y aseg√∫rate de incluir `g++` durante la instalaci√≥n.
       3. Agrega la ruta de MinGW (`C:\MinGW\bin`) a las variables de entorno del sistema.
     - **Visual Studio**:
       1. Descarga e instala [Visual Studio](https://visualstudio.microsoft.com/) con el componente "Desarrollo de escritorio con C++".

   - **macOS**:
     1. Instala Xcode desde la App Store.
     2. Abre la terminal y ejecuta:
        ```bash
        xcode-select --install
        ```
   
   - **Linux**:
     1. Abre la terminal.
     2. Instala `g++` usando el gestor de paquetes de tu distribuci√≥n. Por ejemplo, en Ubuntu:
        ```bash
        sudo apt update
        sudo apt install g++
        ```

   ```bash
   git clone https://github.com/Deivst/to_do_list
   cd to_do_list
